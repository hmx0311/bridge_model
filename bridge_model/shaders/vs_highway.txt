#version 430 core

layout(location = 0) in vec3 vertex;
layout(location = 1) in vec3 normal;
layout(location = 2) in vec2 texCoord;

layout(std140, binding = 0) uniform View
{
	mat4 projectionMat;
	mat4 viewMat;
	mat4 invViewMat;
};

out vec3 modelPos;
out vec3 modelPosView;
out vec3 aNormal;
out vec2 aTexCoord;

void main()
{
	modelPos = vertex;
	modelPosView = mat4x3(viewMat) * vec4(vertex, 1.0);
	aNormal = normal;
	aTexCoord = vec2(texCoord);
	vec3 viewRay = invViewMat[3].xyz - modelPos;
	gl_Position = projectionMat * vec4(modelPosView, 1.0);
}